{"ast":null,"code":"var _jsxFileName = \"/Users/nikitos/Desktop/ALGORITM/ALL ABOUT REACT/ORGANIZER/bootcamp-m4-starter/src/components/Favorites/Favorites.js\";\nimport React, { Component } from 'react';\nimport './Favorites.css';\n\nclass Favorites extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      serverIDforList: ''\n    };\n\n    this.changeTitle = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.createList = () => {\n      fetch('https://acb-api.algoritmika.org/api/movies/list', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: this.state.title,\n          movies: this.props.favorites.map(m => m.imdbID)\n        })\n      }).then(resp => resp.json()).then(da => {\n        this.setState({\n          serverIDforList: da.id\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      title\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"favorites\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: title,\n      onChange: this.changeTitle,\n      type: \"text\",\n      className: \"favorites__name\",\n      placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"favorites__list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, this.props.favorites.map(item => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.imdbID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 32\n        }\n      }, item.Title, \" (\", item.Year, \")\", /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => this.props.deleteFav(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 41\n        }\n      }, \"X\"));\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"favorites__save\",\n      onClick: () => this.props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\"));\n  }\n\n}\n\nexport default Favorites;","map":{"version":3,"sources":["/Users/nikitos/Desktop/ALGORITM/ALL ABOUT REACT/ORGANIZER/bootcamp-m4-starter/src/components/Favorites/Favorites.js"],"names":["React","Component","Favorites","state","title","serverIDforList","changeTitle","e","setState","target","value","createList","fetch","method","headers","body","JSON","stringify","movies","props","favorites","map","m","imdbID","then","resp","json","da","id","render","item","Title","Year","deleteFav"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;;AAGA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,eAAe,EAAE;AAFb,KADsB;;AAAA,SAM9BC,WAN8B,GAMfC,CAAD,IAAO;AACjB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,KAAK,EAAEG,CAAC,CAACE,MAAF,CAASC;AADN,OAAd;AAGH,KAV6B;;AAAA,SAW9BC,UAX8B,GAWjB,MAAM;AACfC,MAAAA,KAAK,CAAC,iDAAD,EAAoD;AACrDC,QAAAA,MAAM,EAAE,MAD6C;AAErDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF4C;AAKrDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBb,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADD;AAEjBc,UAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,MAAjC;AAFS,SAAf;AAL+C,OAApD,CAAL,CAUKC,IAVL,CAUUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAVlB,EAWKF,IAXL,CAWUG,EAAE,IAAI;AACR,aAAKnB,QAAL,CAAc;AAAEH,UAAAA,eAAe,EAAEsB,EAAE,CAACC;AAAtB,SAAd;AACH,OAbL;AAcH,KA1B6B;AAAA;;AA8B9BC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEzB,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAEC,KADX;AAEI,MAAA,QAAQ,EAAE,KAAKE,WAFnB;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,SAAS,EAAC,iBAJd;AAKI,MAAA,WAAW,EAAC,qEALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAUI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKa,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAA0BS,IAAD,IAAU;AAEhC,0BAAO;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACP,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMO,IAAI,CAACC,KADX,QACoBD,IAAI,CAACE,IADzB,oBAES;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAM,KAAKb,KAAL,CAAWc,SAAX,CAAqBH,IAArB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFT,CAAP;AAIH,KANA,CADL,CAVJ,eAmBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAE,MAAM,KAAKX,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGAnBJ,CADJ;AAuBH;;AAvD6B;;AA0DlC,eAAejB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Favorites.css';\n\n\nclass Favorites extends Component {\n    state = {\n        title: '',\n        serverIDforList: ''\n    }\n\n    changeTitle = (e) => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n    createList = () => {\n        fetch('https://acb-api.algoritmika.org/api/movies/list', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                title: this.state.title,\n                movies: this.props.favorites.map( m => m.imdbID )\n            })\n        })\n            .then(resp => resp.json())\n            .then(da => {\n                this.setState({ serverIDforList: da.id })\n            });\n    }\n\n\n\n    render() { \n        const { title } = this.state;\n        return (\n            <div className=\"favorites\">\n                <form>\n                    <input \n                        value={title}\n                        onChange={this.changeTitle}\n                        type='text'\n                        className=\"favorites__name\"\n                        placeholder=\"Новый список\"\n                    />\n                </form>\n                <ul className=\"favorites__list\">\n                    {this.props.favorites.map((item) => {\n\n                        return <li key={item.imdbID}>\n                                    {item.Title} ({item.Year})\n                                        <button type='button' onClick={() => this.props.deleteFav(item)}>X</button>                                  \n                                </li>;\n                    })}\n                </ul>\n                <button type=\"button\" className=\"favorites__save\" onClick={() => this.props}>Сохранить список</button>\n            </div>\n        );\n    }\n}\n \nexport default Favorites;"]},"metadata":{},"sourceType":"module"}