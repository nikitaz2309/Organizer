{"ast":null,"code":"var _jsxFileName = \"/Users/nikitos/Desktop/ALGORITM/ALL ABOUT REACT/ORGANIZER/bootcamp-m4-starter/src/pages/ListPage/ListPage.js\";\nimport React, { Component } from 'react';\nimport './ListPage.css';\n\nclass ListPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.loadList = async () => {\n      const response = await fetch('http://www.omdbapi.com/?i=tt3896198&apikey=d1b7a5cd');\n      apis = await response.json();\n      return apis;\n    };\n\n    this.state = {\n      movies: [{\n        title: 'The Godfather',\n        year: 1972,\n        imdbID: 'tt0068646'\n      }]\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params;\n    console.log(id);\n    this.loadList().then; // TODO: запрос к сервер на получение списка\n    // TODO: запросы к серверу по всем imdbID\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"list-page__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"\\u041C\\u043E\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, this.state.movies.map(item => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.imdbID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://www.imdb.com/title/tt0068646/\",\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }\n      }, item.title, \" (\", item.year, \")\"));\n    })));\n  }\n\n}\n\nexport default ListPage;","map":{"version":3,"sources":["/Users/nikitos/Desktop/ALGORITM/ALL ABOUT REACT/ORGANIZER/bootcamp-m4-starter/src/pages/ListPage/ListPage.js"],"names":["React","Component","ListPage","loadList","response","fetch","apis","json","state","movies","title","year","imdbID","componentDidMount","id","props","match","params","console","log","then","render","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAG7BE,QAH6B,GAGlB,YAAW;AAClB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,qDADwB,CAA5B;AAGAC,MAAAA,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAb;AACA,aAAOD,IAAP;AACH,KAT4B;;AAAA,SAa7BE,KAb6B,GAarB;AACJC,MAAAA,MAAM,EAAE,CACJ;AAAEC,QAAAA,KAAK,EAAE,eAAT;AAA0BC,QAAAA,IAAI,EAAE,IAAhC;AAAsCC,QAAAA,MAAM,EAAE;AAA9C,OADI;AADJ,KAbqB;AAAA;;AAkB7BC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,EAAE,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;AAGA,SAAKX,QAAL,GAAgBiB,IAAhB,CALgB,CAQhB;AACA;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKb,KAAL,CAAWC,MAAX,CAAkBa,GAAlB,CAAuBC,IAAD,IAAU;AAC7B,0BACI;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACX,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,IAAI,EAAC,uCAAR;AAAgD,QAAA,MAAM,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiEW,IAAI,CAACb,KAAtE,QAA+Ea,IAAI,CAACZ,IAApF,MADJ,CADJ;AAKH,KANA,CADL,CAFJ,CADJ;AAcH;;AA5C4B;;AA+CjC,eAAeT,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './ListPage.css';\n\nclass ListPage extends Component {\n\n\n    loadList = async() => {\n        const response = await fetch (\n            'http://www.omdbapi.com/?i=tt3896198&apikey=d1b7a5cd'\n        );\n        apis = await response.json()\n        return apis;\n    };\n    \n\n\n    state = {\n        movies: [\n            { title: 'The Godfather', year: 1972, imdbID: 'tt0068646' }\n        ]\n    }\n    componentDidMount() {\n        const id = this.props.match.params;\n        console.log(id);\n\n\n        this.loadList().then\n\n\n        // TODO: запрос к сервер на получение списка\n        // TODO: запросы к серверу по всем imdbID\n    }\n    render() { \n        return (\n            <div className=\"list-page\">\n                <h1 className=\"list-page__title\">Мой список</h1>\n                <ul>\n                    {this.state.movies.map((item) => {\n                        return (\n                            <li key={item.imdbID}>\n                                <a href=\"https://www.imdb.com/title/tt0068646/\" target=\"_blank\">{item.title} ({item.year})</a>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        );\n    }\n}\n \nexport default ListPage;"]},"metadata":{},"sourceType":"module"}