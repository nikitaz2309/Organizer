{"ast":null,"code":"var _jsxFileName = \"/Users/nikitos/Desktop/ALGORITM/ALL ABOUT REACT/ORGANIZER/bootcamp-m4-starter/src/pages/ListPage/ListPage.js\";\nimport React, { Component } from 'react';\nimport './ListPage.css';\n\nclass ListPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    console.log(id);\n    fetch(`https://acb-api.algoritmika.org/api/movies/list/${id}`).then(resp => resp.json()).then(data => {\n      console.log(data);\n    }); // TODO: запрос к сервер на получение списка\n    // TODO: запросы к серверу по всем imdbID\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"list-page__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, this.state.title), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, this.state.movies.map(item => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.imdbID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: `https://www.imdb.com/title/${item.imdbID}`,\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }\n      }, item.Title, \" (\", item.Year, \")\"));\n    })));\n  }\n\n}\n\nexport default ListPage;","map":{"version":3,"sources":["/Users/nikitos/Desktop/ALGORITM/ALL ABOUT REACT/ORGANIZER/bootcamp-m4-starter/src/pages/ListPage/ListPage.js"],"names":["React","Component","ListPage","state","title","movies","componentDidMount","id","props","match","params","console","log","fetch","then","resp","json","data","render","map","item","imdbID","Title","Year"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BE,KAF6B,GAErB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAFqB;AAAA;;AAQ7BC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,EAAE,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAAnC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;AAEAM,IAAAA,KAAK,CAAE,mDAAkDN,EAAG,EAAvD,CAAL,CACCO,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACH,KAJD,EAJgB,CAShB;AACA;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKf,KAAL,CAAWC,KAA7C,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWE,MAAX,CAAkBc,GAAlB,CAAuBC,IAAD,IAAU;AAC7B,0BACI;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,IAAI,EAAG,8BAA6BD,IAAI,CAACC,MAAO,EAAnD;AAAsD,QAAA,MAAM,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuED,IAAI,CAACE,KAA5E,QAAqFF,IAAI,CAACG,IAA1F,MADJ,CADJ;AAKH,KANA,CADL,CAFJ,CADJ;AAcH;;AAnC4B;;AAsCjC,eAAerB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './ListPage.css';\n\nclass ListPage extends Component {\n    \n    state = {\n        title: '',\n        movies: [\n            \n        ]\n    }\n    componentDidMount() {\n        const id = this.props.match.params.id;\n        console.log(id);\n        \n        fetch(`https://acb-api.algoritmika.org/api/movies/list/${id}`)\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data)\n        })\n        // TODO: запрос к сервер на получение списка\n        // TODO: запросы к серверу по всем imdbID\n    }\n    render() { \n        return (\n            <div className=\"list-page\">\n                <h1 className=\"list-page__title\">{this.state.title}</h1>\n                <ul>\n                    {this.state.movies.map((item) => {\n                        return (\n                            <li key={item.imdbID}>\n                                <a href={`https://www.imdb.com/title/${item.imdbID}`} target=\"_blank\">{item.Title} ({item.Year})</a>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        );\n    }\n}\n \nexport default ListPage;"]},"metadata":{},"sourceType":"module"}